<!--
    Perform AMCL localisation: runs several nodes to generate odometry from laser scans (ICP) & IMU, loads a map of the POW assessment area, runs AMCL, plays back a dataset for localisation, and runs the visualiser with the correct visualisation parameters configured.
-->

<launch>
	<param name="/use_sim_time" value="true"/>

	<node name="rosplay" pkg="rosbag" type="play" args="$(find pow_analyzer)/data/pow_freek_2_2011-04-01-14-19-39.bag  			--clock"/>
    
	<node pkg="tf" type="static_transform_publisher" name="baselink_laser" args="0 0 0 0 0 0 /base_link /laser 10"/>
	<node pkg="tf" type="static_transform_publisher" name="laser_imu" args="0 0 0 0 0 0 /laser /base_imu 10"/>
	<node pkg="tf" type="static_transform_publisher" name="baselink_camera" args="0 0 0 0 0 0 /base_link /camera 10"/>

	<node pkg="tf" type="static_transform_publisher" name="corner_a" args="0.45 0.3 0 0 0 0 /base_link /corner1 10"/>
	<node pkg="tf" type="static_transform_publisher" name="corner_b" args="0.45 -0.3 0 0 0 0 /base_link /corner2 10"/>
	<node pkg="tf" type="static_transform_publisher" name="corner_c" args="-0.45 -0.3 0 0 0 0 /base_link /corner3 10"/>
	<node pkg="tf" type="static_transform_publisher" name="corner_d" args="-0.45 0.3 0 0 0 0 /base_link /corner4 10"/>

    
	<!-- Start the map server node and specify the map file (*.pgm) and the map resolution in metres/pixel -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(find pow_analyzer)/maps/pow_hector_map_new.yaml" 	output="screen"/>
    
	<!--Start the Laser_scan_matcher package, to provide odometry from laser data (ICP)-->
	<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" 
		name="laser_scan_matcher_node" output="screen">
		<param name="use_alpha_beta" value="true"/>
		<param name="max_iterations" value="10"/>
	</node>

    <!-- Start the gmapping node -->
    <!--node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen"/-->

	<node pkg="amcl" type="amcl" name="amcl" respawn="true" output="screen">
		<param name="base_frame_id" value="base_link"/>
		<param name="odom_frame_id" value="world"/>
		<param name="global_frame_id" value="map"/>
		<param name="update_min_d" value="0.2"/>   
		<param name="update_min_a" value="0.5"/> 
		<param name="initial_pose_x" value="-1.2"/>
		<param name="initial_pose_y" value="0.3"/>
		<param name="initial_pose_a" value="-0.1"/>
		<param name="min_particles" value="7000"/> 
		<param name="max_particles" value="9000"/>
		<param name="odom_model_type" value="diff"/>
		<param name="kld_err" value="0.02"/> 
		<param name="resample_interval" value="1"/>
		<param name="odom_alpha1" value="0.2"/>   
		<param name="odom_alpha2" value="0.2"/>
		<param name="odom_alpha3" value="0.3"/>
		<param name="odom_alpha4" value="0.2"/>
		<param name="laser_max_beams" value="20"/>
	</node>

	<!--Start the "analyzer_packages"-->
	<!-- acml_listener broadcasts markers for the position of the wheelchair, to visualize in Rviz-->

	<node pkg="pow_analyzer" type="amcl_odom" name="amcl_odom" output="screen"/> 	
		<node pkg="pow_analyzer" type="speed_node_amcl" name="speed_node_amcl" output="screen"/> 
	<node pkg="pow_analyzer" type="beds_node" name="beds_node" output="screen"/> 
	<node pkg="pow_analyzer" type="doors_node" name="doors_node" output="screen"/>
	
	
<node pkg="rosbag" type="record" output="screen" name="rec" args="/amcl_pose"/> 
	<!-- Start an rviz node with a custom configuration for the viewpoint, map_server, trajectory, laser scans, etc -->
	<node pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find pow_analyzer)/launch/pow_rviz.vcg"/>

</launch>
